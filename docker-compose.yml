version: '3.8'

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    image: survey-server-prod
    container_name: survey-node-server-prod
    ports:
      - '5000:5000'
    depends_on:
      - mongo
    restart: always
    environment:
      - NODE_ENV=production
    networks:
      - app-network
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    image: survey-client-prod
    container_name: survey-react-client-prod
    depends_on:
      - server
    ports:
      - '443:80'
    networks:
      - app-network
  # Mongo
  mongo:
    image: mongo:5.0.14
    command: mongod --port 27018
    ports:
      - '27018:27018'
    networks:
      - app-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - data-volume:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #portainer
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  portainer_data:
  data-volume:
  node_modules:
  web-root:
    driver: local
